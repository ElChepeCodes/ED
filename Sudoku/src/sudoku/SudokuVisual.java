/*
 * Estructuras de datos
 * Autor: Jose Luis Gutierrez Espinosa
 */
package sudoku;

import Sets.ArraySet;
import Stacks.ArrayStack;
import javax.swing.JOptionPane;

/**
 *
 * @author jlgut
 */
public class SudokuVisual extends javax.swing.JFrame {

    /**
     * Creates new form SudokuVisual
     */
    public SudokuVisual() {
        initComponents();
        cont=0;
        arr= new int [9][3][3];
        posicionesConValor=new ArraySet();
        int s, i, j;
        for (s=0; s<9;s++)
            for(i=0;i<3;i++)
                for(j=0;j<3;j++)
                    arr[s][i][j]=0;
        /*arr[0][0][0]=9;
        try{
        resuelve1();
        }catch(Error e){
        clear();
        text11.setText("9");
        traduceArrB();
        resuelve1();
        }
        clear();
        
        */
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        text11 = new javax.swing.JTextField();
        text12 = new javax.swing.JTextField();
        text13 = new javax.swing.JTextField();
        text14 = new javax.swing.JTextField();
        text15 = new javax.swing.JTextField();
        text16 = new javax.swing.JTextField();
        text17 = new javax.swing.JTextField();
        text18 = new javax.swing.JTextField();
        text19 = new javax.swing.JTextField();
        text21 = new javax.swing.JTextField();
        text22 = new javax.swing.JTextField();
        text23 = new javax.swing.JTextField();
        text24 = new javax.swing.JTextField();
        text25 = new javax.swing.JTextField();
        text26 = new javax.swing.JTextField();
        text27 = new javax.swing.JTextField();
        text28 = new javax.swing.JTextField();
        text29 = new javax.swing.JTextField();
        text31 = new javax.swing.JTextField();
        text32 = new javax.swing.JTextField();
        text33 = new javax.swing.JTextField();
        text34 = new javax.swing.JTextField();
        text35 = new javax.swing.JTextField();
        text36 = new javax.swing.JTextField();
        text37 = new javax.swing.JTextField();
        text38 = new javax.swing.JTextField();
        text39 = new javax.swing.JTextField();
        text41 = new javax.swing.JTextField();
        text42 = new javax.swing.JTextField();
        text43 = new javax.swing.JTextField();
        text44 = new javax.swing.JTextField();
        text45 = new javax.swing.JTextField();
        text46 = new javax.swing.JTextField();
        text47 = new javax.swing.JTextField();
        text48 = new javax.swing.JTextField();
        text49 = new javax.swing.JTextField();
        text51 = new javax.swing.JTextField();
        text52 = new javax.swing.JTextField();
        text53 = new javax.swing.JTextField();
        text54 = new javax.swing.JTextField();
        text55 = new javax.swing.JTextField();
        text56 = new javax.swing.JTextField();
        text57 = new javax.swing.JTextField();
        text58 = new javax.swing.JTextField();
        text59 = new javax.swing.JTextField();
        text61 = new javax.swing.JTextField();
        text62 = new javax.swing.JTextField();
        text63 = new javax.swing.JTextField();
        text64 = new javax.swing.JTextField();
        text65 = new javax.swing.JTextField();
        text66 = new javax.swing.JTextField();
        text67 = new javax.swing.JTextField();
        text68 = new javax.swing.JTextField();
        text69 = new javax.swing.JTextField();
        text71 = new javax.swing.JTextField();
        text72 = new javax.swing.JTextField();
        text73 = new javax.swing.JTextField();
        text74 = new javax.swing.JTextField();
        text75 = new javax.swing.JTextField();
        text76 = new javax.swing.JTextField();
        text77 = new javax.swing.JTextField();
        text78 = new javax.swing.JTextField();
        text79 = new javax.swing.JTextField();
        text81 = new javax.swing.JTextField();
        text82 = new javax.swing.JTextField();
        text83 = new javax.swing.JTextField();
        text84 = new javax.swing.JTextField();
        text85 = new javax.swing.JTextField();
        text86 = new javax.swing.JTextField();
        text87 = new javax.swing.JTextField();
        text88 = new javax.swing.JTextField();
        text89 = new javax.swing.JTextField();
        text91 = new javax.swing.JTextField();
        text92 = new javax.swing.JTextField();
        text93 = new javax.swing.JTextField();
        text94 = new javax.swing.JTextField();
        text95 = new javax.swing.JTextField();
        text96 = new javax.swing.JTextField();
        text97 = new javax.swing.JTextField();
        text98 = new javax.swing.JTextField();
        text99 = new javax.swing.JTextField();
        ResuelveBt = new javax.swing.JButton();
        ClearBt = new javax.swing.JButton();
        VerificaBt = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(10, 9));

        text11.setText("0");
        text11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text11ActionPerformed(evt);
            }
        });
        getContentPane().add(text11);

        text12.setText("0");
        text12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text12ActionPerformed(evt);
            }
        });
        getContentPane().add(text12);

        text13.setText("0");
        getContentPane().add(text13);

        text14.setText("0");
        getContentPane().add(text14);

        text15.setText("0");
        getContentPane().add(text15);

        text16.setText("0");
        getContentPane().add(text16);

        text17.setText("0");
        text17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text17ActionPerformed(evt);
            }
        });
        getContentPane().add(text17);

        text18.setText("0");
        getContentPane().add(text18);

        text19.setText("0");
        getContentPane().add(text19);

        text21.setText("0");
        getContentPane().add(text21);

        text22.setText("0");
        getContentPane().add(text22);

        text23.setText("0");
        getContentPane().add(text23);

        text24.setText("0");
        getContentPane().add(text24);

        text25.setText("0");
        getContentPane().add(text25);

        text26.setText("0");
        getContentPane().add(text26);

        text27.setText("0");
        getContentPane().add(text27);

        text28.setText("0");
        getContentPane().add(text28);

        text29.setText("0");
        getContentPane().add(text29);

        text31.setText("0");
        getContentPane().add(text31);

        text32.setText("0");
        getContentPane().add(text32);

        text33.setText("0");
        getContentPane().add(text33);

        text34.setText("0");
        getContentPane().add(text34);

        text35.setText("0");
        getContentPane().add(text35);

        text36.setText("0");
        getContentPane().add(text36);

        text37.setText("0");
        getContentPane().add(text37);

        text38.setText("0");
        getContentPane().add(text38);

        text39.setText("0");
        getContentPane().add(text39);

        text41.setText("0");
        getContentPane().add(text41);

        text42.setText("0");
        getContentPane().add(text42);

        text43.setText("0");
        getContentPane().add(text43);

        text44.setText("0");
        getContentPane().add(text44);

        text45.setText("0");
        getContentPane().add(text45);

        text46.setText("0");
        getContentPane().add(text46);

        text47.setText("0");
        getContentPane().add(text47);

        text48.setText("0");
        getContentPane().add(text48);

        text49.setText("0");
        getContentPane().add(text49);

        text51.setText("0");
        getContentPane().add(text51);

        text52.setText("0");
        getContentPane().add(text52);

        text53.setText("0");
        getContentPane().add(text53);

        text54.setText("0");
        getContentPane().add(text54);

        text55.setText("0");
        getContentPane().add(text55);

        text56.setText("0");
        getContentPane().add(text56);

        text57.setText("0");
        getContentPane().add(text57);

        text58.setText("0");
        getContentPane().add(text58);

        text59.setText("0");
        getContentPane().add(text59);

        text61.setText("0");
        getContentPane().add(text61);

        text62.setText("0");
        getContentPane().add(text62);

        text63.setText("0");
        getContentPane().add(text63);

        text64.setText("0");
        getContentPane().add(text64);

        text65.setText("0");
        getContentPane().add(text65);

        text66.setText("0");
        getContentPane().add(text66);

        text67.setText("0");
        getContentPane().add(text67);

        text68.setText("0");
        getContentPane().add(text68);

        text69.setText("0");
        getContentPane().add(text69);

        text71.setText("0");
        getContentPane().add(text71);

        text72.setText("0");
        getContentPane().add(text72);

        text73.setText("0");
        text73.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text73ActionPerformed(evt);
            }
        });
        getContentPane().add(text73);

        text74.setText("0");
        getContentPane().add(text74);

        text75.setText("0");
        getContentPane().add(text75);

        text76.setText("0");
        getContentPane().add(text76);

        text77.setText("0");
        getContentPane().add(text77);

        text78.setText("0");
        getContentPane().add(text78);

        text79.setText("0");
        getContentPane().add(text79);

        text81.setText("0");
        getContentPane().add(text81);

        text82.setText("0");
        text82.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text82ActionPerformed(evt);
            }
        });
        getContentPane().add(text82);

        text83.setText("0");
        getContentPane().add(text83);

        text84.setText("0");
        getContentPane().add(text84);

        text85.setText("0");
        getContentPane().add(text85);

        text86.setText("0");
        getContentPane().add(text86);

        text87.setText("0");
        getContentPane().add(text87);

        text88.setText("0");
        getContentPane().add(text88);

        text89.setText("0");
        getContentPane().add(text89);

        text91.setText("0");
        getContentPane().add(text91);

        text92.setText("0");
        getContentPane().add(text92);

        text93.setText("0");
        getContentPane().add(text93);

        text94.setText("0");
        text94.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text94ActionPerformed(evt);
            }
        });
        getContentPane().add(text94);

        text95.setText("0");
        getContentPane().add(text95);

        text96.setText("0");
        getContentPane().add(text96);

        text97.setText("0");
        getContentPane().add(text97);

        text98.setText("0");
        getContentPane().add(text98);

        text99.setText("0");
        getContentPane().add(text99);

        ResuelveBt.setText("Resuelve");
        ResuelveBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResuelveBtActionPerformed(evt);
            }
        });
        getContentPane().add(ResuelveBt);

        ClearBt.setText("Clear");
        ClearBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtActionPerformed(evt);
            }
        });
        getContentPane().add(ClearBt);

        VerificaBt.setText("Verifica");
        VerificaBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VerificaBtActionPerformed(evt);
            }
        });
        getContentPane().add(VerificaBt);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void text12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text12ActionPerformed

    private void text73ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text73ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text73ActionPerformed

    private void text82ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text82ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text82ActionPerformed

    private void text94ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text94ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text94ActionPerformed

    private void ClearBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtActionPerformed
       clear();
    }//GEN-LAST:event_ClearBtActionPerformed

    private void text17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text17ActionPerformed

    private void text11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text11ActionPerformed

    private void ResuelveBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResuelveBtActionPerformed
        this.traduceArrB();
        boolean validez=verificaTodo();
        if (validez){
            //System.out.println(imprimeMatriz());
            resuelve();
            //System.out.println(imprimeMatriz());
           // System.out.println("cont-"+cont+"-contNoValido-"+contNoValido);
        }
        else
            JOptionPane.showMessageDialog(rootPane, "No es valido");
        
        
    }//GEN-LAST:event_ResuelveBtActionPerformed

    private void VerificaBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VerificaBtActionPerformed
        this.traduceArrB();
        boolean validez=verificaTodo();
        if (validez)
            JOptionPane.showMessageDialog(rootPane, "Es valido");
        else
            JOptionPane.showMessageDialog(rootPane, "No es valido");
    }//GEN-LAST:event_VerificaBtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SudokuVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SudokuVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SudokuVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SudokuVisual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SudokuVisual().setVisible(true);
            }
        });
    }
    private int [][][] arr;
    private int cont, contNoValido;
    private ArraySet<int[]>posicionesConValor;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClearBt;
    private javax.swing.JButton ResuelveBt;
    private javax.swing.JButton VerificaBt;
    private javax.swing.JTextField text11;
    private javax.swing.JTextField text12;
    private javax.swing.JTextField text13;
    private javax.swing.JTextField text14;
    private javax.swing.JTextField text15;
    private javax.swing.JTextField text16;
    private javax.swing.JTextField text17;
    private javax.swing.JTextField text18;
    private javax.swing.JTextField text19;
    private javax.swing.JTextField text21;
    private javax.swing.JTextField text22;
    private javax.swing.JTextField text23;
    private javax.swing.JTextField text24;
    private javax.swing.JTextField text25;
    private javax.swing.JTextField text26;
    private javax.swing.JTextField text27;
    private javax.swing.JTextField text28;
    private javax.swing.JTextField text29;
    private javax.swing.JTextField text31;
    private javax.swing.JTextField text32;
    private javax.swing.JTextField text33;
    private javax.swing.JTextField text34;
    private javax.swing.JTextField text35;
    private javax.swing.JTextField text36;
    private javax.swing.JTextField text37;
    private javax.swing.JTextField text38;
    private javax.swing.JTextField text39;
    private javax.swing.JTextField text41;
    private javax.swing.JTextField text42;
    private javax.swing.JTextField text43;
    private javax.swing.JTextField text44;
    private javax.swing.JTextField text45;
    private javax.swing.JTextField text46;
    private javax.swing.JTextField text47;
    private javax.swing.JTextField text48;
    private javax.swing.JTextField text49;
    private javax.swing.JTextField text51;
    private javax.swing.JTextField text52;
    private javax.swing.JTextField text53;
    private javax.swing.JTextField text54;
    private javax.swing.JTextField text55;
    private javax.swing.JTextField text56;
    private javax.swing.JTextField text57;
    private javax.swing.JTextField text58;
    private javax.swing.JTextField text59;
    private javax.swing.JTextField text61;
    private javax.swing.JTextField text62;
    private javax.swing.JTextField text63;
    private javax.swing.JTextField text64;
    private javax.swing.JTextField text65;
    private javax.swing.JTextField text66;
    private javax.swing.JTextField text67;
    private javax.swing.JTextField text68;
    private javax.swing.JTextField text69;
    private javax.swing.JTextField text71;
    private javax.swing.JTextField text72;
    private javax.swing.JTextField text73;
    private javax.swing.JTextField text74;
    private javax.swing.JTextField text75;
    private javax.swing.JTextField text76;
    private javax.swing.JTextField text77;
    private javax.swing.JTextField text78;
    private javax.swing.JTextField text79;
    private javax.swing.JTextField text81;
    private javax.swing.JTextField text82;
    private javax.swing.JTextField text83;
    private javax.swing.JTextField text84;
    private javax.swing.JTextField text85;
    private javax.swing.JTextField text86;
    private javax.swing.JTextField text87;
    private javax.swing.JTextField text88;
    private javax.swing.JTextField text89;
    private javax.swing.JTextField text91;
    private javax.swing.JTextField text92;
    private javax.swing.JTextField text93;
    private javax.swing.JTextField text94;
    private javax.swing.JTextField text95;
    private javax.swing.JTextField text96;
    private javax.swing.JTextField text97;
    private javax.swing.JTextField text98;
    private javax.swing.JTextField text99;
    // End of variables declaration//GEN-END:variables
    
    public void clear(){
        text11.setText("0");text12.setText("0");text13.setText("0");text14.setText("0");text15.setText("0");text16.setText("0");text17.setText("0");text18.setText("0");
       text21.setText("0");text32.setText("0");text43.setText("0");text54.setText("0");text65.setText("0");text76.setText("0");text87.setText("0");text98.setText("0");
       text22.setText("0");text33.setText("0");text44.setText("0");text55.setText("0");text66.setText("0");text77.setText("0");text88.setText("0");text99.setText("0");
       text23.setText("0");text34.setText("0");text45.setText("0");text56.setText("0");text67.setText("0");text78.setText("0");text89.setText("0");text19.setText("0");
       text24.setText("0");text35.setText("0");text46.setText("0");text57.setText("0");text68.setText("0");text79.setText("0");text91.setText("0");
       text25.setText("0");text36.setText("0");text47.setText("0");text58.setText("0");text69.setText("0");text81.setText("0");text92.setText("0");
       text26.setText("0");text37.setText("0");text48.setText("0");text59.setText("0");text71.setText("0");text82.setText("0");text93.setText("0");
       text27.setText("0");text38.setText("0");text49.setText("0");text61.setText("0");text72.setText("0");text83.setText("0");text94.setText("0");
       text28.setText("0");text39.setText("0");text51.setText("0");text62.setText("0");text73.setText("0");text84.setText("0");text95.setText("0");
       text29.setText("0");text41.setText("0");text52.setText("0");text63.setText("0");text74.setText("0");text85.setText("0");text96.setText("0");
       text31.setText("0");text42.setText("0");text53.setText("0");text64.setText("0");text75.setText("0");text86.setText("0");text97.setText("0");
    }//method
    
    public void traduceArrB(){
        //primer renglon
       arr[0][0][0]=Integer.parseInt(text11.getText());
       arr[0][0][1]=Integer.parseInt(text12.getText());
       arr[0][0][2]=Integer.parseInt(text13.getText());
       arr[1][0][0]=Integer.parseInt(text14.getText());
       arr[1][0][1]=Integer.parseInt(text15.getText());
       arr[1][0][2]=Integer.parseInt(text16.getText());
       arr[2][0][0]=Integer.parseInt(text17.getText());
       arr[2][0][1]=Integer.parseInt(text18.getText());
       arr[2][0][2]=Integer.parseInt(text19.getText());
        
        //segundo renglon
       arr[0][1][0]=Integer.parseInt(text21.getText());
       arr[0][1][1]=Integer.parseInt(text22.getText());
       arr[0][1][2]=Integer.parseInt(text23.getText());
       arr[1][1][0]=Integer.parseInt(text24.getText());
       arr[1][1][1]=Integer.parseInt(text25.getText());
       arr[1][1][2]=Integer.parseInt(text26.getText());
       arr[2][1][0]=Integer.parseInt(text27.getText());
       arr[2][1][1]=Integer.parseInt(text28.getText());
       arr[2][1][2]=Integer.parseInt(text29.getText());
         
        //tercer renglon
       arr[0][2][0]=Integer.parseInt(text31.getText());
       arr[0][2][1]=Integer.parseInt(text32.getText());
       arr[0][2][2]=Integer.parseInt(text33.getText());
       arr[1][2][0]=Integer.parseInt(text34.getText());
       arr[1][2][1]=Integer.parseInt(text35.getText());
       arr[1][2][2]=Integer.parseInt(text36.getText());
       arr[2][2][0]=Integer.parseInt(text37.getText());
       arr[2][2][1]=Integer.parseInt(text38.getText());
       arr[2][2][2]=Integer.parseInt(text39.getText());
       
        //cuarto renglon
       arr[3][0][0]=Integer.parseInt(text41.getText());
       arr[3][0][1]=Integer.parseInt(text42.getText());
       arr[3][0][2]=Integer.parseInt(text43.getText());
       arr[4][0][0]=Integer.parseInt(text44.getText());
       arr[4][0][1]=Integer.parseInt(text45.getText());
       arr[4][0][2]=Integer.parseInt(text46.getText());
       arr[5][0][0]=Integer.parseInt(text47.getText());
       arr[5][0][1]=Integer.parseInt(text48.getText());
       arr[5][0][2]=Integer.parseInt(text49.getText());
       
        //quinto renglon
       arr[3][1][0]=Integer.parseInt(text51.getText());
       arr[3][1][1]=Integer.parseInt(text52.getText());
       arr[3][1][2]=Integer.parseInt(text53.getText());
       arr[4][1][0]=Integer.parseInt(text54.getText());
       arr[4][1][1]=Integer.parseInt(text55.getText());
       arr[4][1][2]=Integer.parseInt(text56.getText());
       arr[5][1][0]=Integer.parseInt(text57.getText());
       arr[5][1][1]=Integer.parseInt(text58.getText());
       arr[5][1][2]=Integer.parseInt(text59.getText());        
        
        //sexto renglon
       arr[3][2][0]=Integer.parseInt(text61.getText());
       arr[3][2][1]=Integer.parseInt(text62.getText());
       arr[3][2][2]=Integer.parseInt(text63.getText());
       arr[4][2][0]=Integer.parseInt(text64.getText());
       arr[4][2][1]=Integer.parseInt(text65.getText());
       arr[4][2][2]=Integer.parseInt(text66.getText());
       arr[5][2][0]=Integer.parseInt(text67.getText());
       arr[5][2][1]=Integer.parseInt(text68.getText());
       arr[5][2][2]=Integer.parseInt(text69.getText());       
       
        //septimo renglon
       arr[6][0][0]=Integer.parseInt(text71.getText());
       arr[6][0][1]=Integer.parseInt(text72.getText());
       arr[6][0][2]=Integer.parseInt(text73.getText());
       arr[7][0][0]=Integer.parseInt(text74.getText());
       arr[7][0][1]=Integer.parseInt(text75.getText());
       arr[7][0][2]=Integer.parseInt(text76.getText());
       arr[8][0][0]=Integer.parseInt(text77.getText());
       arr[8][0][1]=Integer.parseInt(text78.getText());
       arr[8][0][2]=Integer.parseInt(text79.getText());
        
        //octavo renglon
       arr[6][1][0]=Integer.parseInt(text81.getText());
       arr[6][1][1]=Integer.parseInt(text82.getText());
       arr[6][1][2]=Integer.parseInt(text83.getText());
       arr[7][1][0]=Integer.parseInt(text84.getText());
       arr[7][1][1]=Integer.parseInt(text85.getText());
       arr[7][1][2]=Integer.parseInt(text86.getText());
       arr[8][1][0]=Integer.parseInt(text87.getText());
       arr[8][1][1]=Integer.parseInt(text88.getText());
       arr[8][1][2]=Integer.parseInt(text89.getText());
                
        //noveno renglon
       arr[6][2][0]=Integer.parseInt(text91.getText());
       arr[6][2][1]=Integer.parseInt(text92.getText());
       arr[6][2][2]=Integer.parseInt(text93.getText());
       arr[7][2][0]=Integer.parseInt(text94.getText());
       arr[7][2][1]=Integer.parseInt(text95.getText());
       arr[7][2][2]=Integer.parseInt(text96.getText());
       arr[8][2][0]=Integer.parseInt(text97.getText());
       arr[8][2][1]=Integer.parseInt(text98.getText());
       arr[8][2][2]=Integer.parseInt(text99.getText());
       int s,i,j;
       int[]pos=new int[4];
       for(s=0;s<9;s++)
           for(i=0;i<3;i++)
               for(j=0;j<3;j++){
                   if (arr[s][i][j]!=0)
                       pos[0]=s;pos[1]=i;pos[2]=j;pos[3]=arr[s][i][j];
                       posicionesConValor.add(pos);
               }//for
    }//method
    /*
    Este metodo recibe un sector y verifica su validez
    */
    public boolean verificaSector(int s){
        boolean res=true;
        ArraySet<Integer> set=new ArraySet();
        int i=0, j;
        while (res && i<3){
            j=0;
            while (res && j<3){
                if (set.contains(arr[s][i][j]) && arr[s][i][j]!=0)
                    res=false;
                else
                    set.add(arr[s][i][j]);
                j++;
            }//while
            i++;
        }//while
        return res;
    }//method
    /*
    Este metodo recibe un renglon y verifica su validez
    */
    public boolean verificaRenglon(int r){
        boolean res=true;
        ArraySet<Integer> set=new ArraySet();
        int j=0, s=(r/3)*3, i=0;
        r%=3;
        while (res && i<3 && s<9){
            j=0;
            while (res && j<3){
                if (set.contains(arr[s][r][j]) && arr[s][r][j]!=0)
                    res=false;
                else
                    set.add(arr[s][r][j]);
                j++;
            }//while
            s++;
            i++;
        }//while
        return res;
    }//method
        /*
    Este metodo recibe una columna y verifica su validez
    */
    public boolean verificaColumna(int c){
        boolean res=true;
        ArraySet<Integer> set=new ArraySet();
        int i=0, s=c/3;
        c%=3;
        while (res && c-s<3 && s<9){
            i=0;
            while (res && i<3){
                if (set.contains(arr[s][i][c]) && arr[s][i][c]!=0)
                    res=false;
                else
                    set.add(arr[s][i][c]);
                i++;
            }//while
            s+=3;
        }//while
        return res;
    }//method
    /*
    Este metodo regresa la validez de todo el sistema
    */
    public boolean verificaTodo(){
        boolean res=true;
        int i=0;
        while (res && i<9){
            res=this.verificaSector(i);
            i++;            
        }    
        i=0;
        while (res && i<9){
            res=this.verificaColumna(i);
            i++;
        } 
        i=0;
        while (res && i<9){
            res=this.verificaRenglon(i);
            i++;
        }
        return res;
    }
    /*
    Este metodo verifica la validez de una entrada dentro del sudoku
    */
    public boolean verificaIndividual(int s,int i,int j){
        int col=(s%3)*3+j, ren=(s/3)*3+i;
        return verificaSector(s) && verificaColumna(col) && verificaRenglon(ren);
    }//method
    
    public boolean verificaResuelto(){
        boolean res=verificaTodo();
        int s=0,i=0,j=0;
        while (res&& s<9){
            while(res && i<3){
                while(res && j<3){
                    if (arr[s][i][j]==0)
                        res=false;
                    j++;
                }//while
                i++;
            }//while
            s++;
        }//while
        return res;
    }
    
    /*
    Este metodo comienza el proceso recursivo desde el primer valor (el de la esquina superior izquierda)
    Al terminar el proceso recursivo,asigna los valores que se encontraron a los cuadros de texto
    */
    private void resuelve1(){
        try{
        resuelve(0,0,0);
       }catch(Error e){
           System.out.println("No se porque pero funciona");
           
            clear();
            reinsertaValores();
            resuelve(0,0,0);           
           //while
           /*if (arr[8][2][2]==0)
              while(arr[8][2][2]==0)
               try{
                   resuelve(0,0,0);
               }catch(Error r){
                   
               }*/
          clear();
    }
    }
    private void resuelve() {
      // try{
        resuelve(0,0,0);
      // }catch(Error e){
        //   System.out.println("No se porque pero funciona");
          // int c=0;
           //while(!verificaResuelto() && c<1000){
            //clear();
            //reinsertaValores();
            //resuelve(0,0,0);           
            //c++;
         //  }//while
           
           /*if (arr[8][2][2]==0)
              while(arr[8][2][2]==0)
               try{
                   resuelve(0,0,0);
               }catch(Error r){
                   
               }*/
          clear();
       //} 
       text11.setText(""+arr[0][0][0]);text12.setText(""+arr[0][0][1]);text13.setText(""+arr[0][0][2]);     text14.setText(""+arr[1][0][0]);text15.setText(""+arr[1][0][1]);text16.setText(""+arr[1][0][2]);    text17.setText(""+arr[2][0][0]);text18.setText(""+arr[2][0][1]);text19.setText(""+arr[2][0][2]);
       text21.setText(""+arr[0][1][0]);text22.setText(""+arr[0][1][1]);text23.setText(""+arr[0][1][2]);     text24.setText(""+arr[1][1][0]);text25.setText(""+arr[1][1][1]);text26.setText(""+arr[1][1][2]);    text27.setText(""+arr[2][1][0]);text28.setText(""+arr[2][1][1]);text29.setText(""+arr[2][1][2]);
       text31.setText(""+arr[0][2][0]);text32.setText(""+arr[0][2][1]);text33.setText(""+arr[0][2][2]);     text34.setText(""+arr[1][2][0]);text35.setText(""+arr[1][2][1]);text36.setText(""+arr[1][2][2]);    text37.setText(""+arr[2][2][0]);text38.setText(""+arr[2][2][1]);text39.setText(""+arr[2][2][2]);
      
       text41.setText(""+arr[3][0][0]);text42.setText(""+arr[3][0][1]);text43.setText(""+arr[3][0][2]);     text44.setText(""+arr[4][0][0]);text45.setText(""+arr[4][0][1]);text46.setText(""+arr[4][0][2]);    text47.setText(""+arr[5][0][0]);text48.setText(""+arr[5][0][1]);text49.setText(""+arr[5][0][2]);
       text51.setText(""+arr[3][1][0]);text52.setText(""+arr[3][1][1]);text53.setText(""+arr[3][1][2]);     text54.setText(""+arr[4][1][0]);text55.setText(""+arr[4][1][1]);text56.setText(""+arr[4][1][2]);    text57.setText(""+arr[5][1][0]);text58.setText(""+arr[5][1][1]);text59.setText(""+arr[5][1][2]);
       text61.setText(""+arr[3][2][0]);text62.setText(""+arr[3][2][1]);text63.setText(""+arr[3][2][2]);     text64.setText(""+arr[4][2][0]);text65.setText(""+arr[4][2][1]);text66.setText(""+arr[4][2][2]);    text67.setText(""+arr[5][2][0]);text68.setText(""+arr[5][2][1]);text69.setText(""+arr[5][2][2]);
      
       text71.setText(""+arr[6][0][0]);text72.setText(""+arr[6][0][1]);text73.setText(""+arr[6][0][2]);     text74.setText(""+arr[7][0][0]);text75.setText(""+arr[7][0][1]);text76.setText(""+arr[7][0][2]);    text77.setText(""+arr[8][0][0]);text78.setText(""+arr[8][0][1]);text79.setText(""+arr[8][0][2]);
       text81.setText(""+arr[6][1][0]);text82.setText(""+arr[6][1][1]);text83.setText(""+arr[6][1][2]);     text84.setText(""+arr[7][1][0]);text85.setText(""+arr[7][1][1]);text86.setText(""+arr[7][1][2]);    text87.setText(""+arr[8][1][0]);text88.setText(""+arr[8][1][1]);text89.setText(""+arr[8][1][2]);
       text91.setText(""+arr[6][2][0]);text92.setText(""+arr[6][2][1]);text93.setText(""+arr[6][2][2]);     text94.setText(""+arr[7][2][0]);text95.setText(""+arr[7][2][1]);text96.setText(""+arr[7][2][2]);    text97.setText(""+arr[8][2][0]);text98.setText(""+arr[8][2][1]);text99.setText(""+arr[8][2][2]);
       
    }//method
    /*
    Este metodo recorre los cuadros de texto. Si encuentra que ya tiene un valor asignado que es valido, se recorre al siguiente, sino, lo manda al siguiente metodo recursivo
    */
    private void resuelve(int s, int i, int j) {
        
        if (arr[s][i][j]!=0 && verificaIndividual(s,i,j)){
            cont++;
            if (j<2)
                resuelve(s,i,j+1);
            else{
                if (i<2)
                    resuelve(s,i+1,0);
                else
                    if (s<8)
                        resuelve(s+1,0,0);
            }//else
        }//if
        else{
            int[]pos={s,i,j, arr[s][i][j]};
            if (arr[s][i][j]!=0 && !posicionesConValor.contains(pos)){
                contNoValido++;
                if (j>0)
                    resuelve(s,i,j-1,arr[s][i][j-1]+1);
                else
                    if (i>0)
                        resuelve(s,i-1,2, arr[s][i-1][2]+1);
                else
                        if (s>0)
                            resuelve(s-1, 2, 2, arr[s-1][2][2]+1);
                
            }//if
            
            else{
                if (!posicionesConValor.contains(pos)){
                    arr[s][i][j]=1;
                    if (verificaIndividual(s,i,j)){
                    if (j<2)
                        resuelve(s,i,j+1);
                    else
                        if (i<2)
                            resuelve(s,i+1,0);
                        else
                            if (s<8)
                                resuelve(s+1,0,0);
                    }//if
                
                    else{
                        resuelve(s,i,j,2);
                    }//else
                }//if
                else{
                    if (j>0)
                    resuelve(s,i,j-1,arr[s][i][j-1]+1);
                else
                    if (i>0)
                        resuelve(s,i-1,2, arr[s][i-1][2]+1);
                else
                        if (s>0)
                            resuelve(s-1, 2, 2, arr[s-1][2][2]+1);
                }//else
            }//else
        }//else
    }//method
    /*
    Este metodo encuentra el valor adecuado para la posicion en la que se encuentra, si no es posible con la forma en que esta el sudoku, reestablece el valor a 0 y regresa a cambiar el valor de la posicion anterior
    */
    private void resuelve(int s, int i, int j, int val) {
        cont++;
        arr[s][i][j]=val;
        if (verificaTodo() && val<=9){
            if (j<2)
                resuelve(s,i,j+1);
            else
                if (i<2)
                    resuelve(s,i+1,0);
                else
                    if (s<8)
                        resuelve(s+1,0,0);
        }
        else
            if (val<9)
                resuelve(s,i,j,val+1);
            else{
                arr[s][i][j]=0;
                if (j>0)
                    resuelve(s,i,j-1,arr[s][i][j-1]+1);
                else
                    if (i>0)
                        resuelve(s,i-1,2, arr[s][i-1][2]+1);
                else
                        if (s>0)
                            resuelve(s-1, 2, 2, arr[s-1][2][2]+1);
            }//else
                
    }//method
    /*
    Este metodo solo se utilizo durante las pruebas, no lo ve el ususario. Sin embargo, se utiliza para imprimir los sectores del sudoku por separado.
    */
    public void reinsertaValores(){
        ArraySet<int[]>temp=new ArraySet();
        int[] aux=new int[4];
        while (!posicionesConValor.isEmpty()){
            aux=posicionesConValor.removeRandom();
            arr[aux[0]][aux[1]][aux[2]]=aux[3];
            temp.add(aux);
        }//while
        while (!temp.isEmpty())
            posicionesConValor.add(temp.removeRandom());
    }//method
    public String imprimeMatriz(){
                int s, i, j;
                StringBuilder res= new StringBuilder();
        for (s=0; s<9;s++){
            for(i=0;i<3;i++){
                for(j=0;j<3;j++){
                    res.append(arr[s][i][j]).append(" ");
                }
                res.append("\n");
            }
            res.append("\n");
        }
            return res.toString();
    }//method
}//class